diff -Nur zstd-1.5.0/tests/poolTests.c zstd-1.5.0-new/tests/poolTests.c
--- zstd-1.5.0/tests/poolTests.c	2021-12-15 14:27:22.047664997 +0800
+++ zstd-1.5.0-new/tests/poolTests.c	2021-12-15 14:40:08.926050471 +0800
@@ -235,7 +235,7 @@
 
   if (POOL_create(0, 1)) {   /* should not be possible */
     printf("FAIL: should not create POOL with 0 threads\n");
-    DISPLAY("==== results; passed: 0/1, failed: 0/1, skipped: 0/1 ====\n");
+    DISPLAY("==== results: passed: 0/1, failed: 0/1, skipped: 0/1 ====\n");
     return 1;
   }
 
@@ -246,14 +246,14 @@
             (unsigned)queueSize, (unsigned)numThreads);
       if (testOrder(numThreads, queueSize)) {
         printf("FAIL: testOrder\n");
-	DISPLAY("==== results; passed: %d/%d, failed: 1/%d, skipped: 0/%d ====\n",
+	DISPLAY("==== results: passed: %d/%d, failed: 1/%d, skipped: 0/%d ====\n",
 	       testNb, (testNb+1), (testNb+1), (testNb+1));
         return 1;
       }
       printf("SUCCESS: testOrder\n");testNb++;
       if (testWait(numThreads, queueSize)) {
         printf("FAIL: testWait\n");
-        DISPLAY("==== results; passed: %d/%d, failed: 1/%d, skipped: 0/%d ====\n",
+        DISPLAY("==== results: passed: %d/%d, failed: 1/%d, skipped: 0/%d ====\n",
 	       testNb, (testNb+1), (testNb+1), (testNb+1));	
         return 1;
       }
@@ -263,7 +263,7 @@
 
   if (testThreadReduction()) {
       printf("FAIL: thread reduction not effective \n");
-      DISPLAY("==== results; passed: %d/%d, failed: 1/%d, skipped: 0/%d ====\n",
+      DISPLAY("==== results: passed: %d/%d, failed: 1/%d, skipped: 0/%d ====\n",
 	      testNb, (testNb+1), (testNb+1), (testNb+1));
       return 1;
   } else {
@@ -272,7 +272,7 @@
 
   if (testAbruptEnding()) {
       printf("FAIL: jobs in queue not completed on early end \n");
-      DISPLAY("==== results; passed: %d/%d, failed: 1/%d, skipped: 0/%d ====\n",
+      DISPLAY("==== results: passed: %d/%d, failed: 1/%d, skipped: 0/%d ====\n",
 		testNb, (testNb+1), (testNb+1), (testNb+1));      
       return 1;
   } else {
@@ -280,7 +280,7 @@
   }
 
   printf("PASS: all POOL tests\n");
-  DISPLAY("==== results; passed: %d/%d, failed: 0/%d, skipped: 0/%d ====\n",
+  DISPLAY("==== results: passed: %d/%d, failed: 0/%d, skipped: 0/%d ====\n",
           testNb, testNb, testNb, testNb);
 
   return 0;
